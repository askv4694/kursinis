names(data)[names(data) == "characteristics_ch1.4"] <- "tissue_region"
data$tissue_region <- gsub("tissue region: ", "", data$tissue_region)
names(data)[names(data) == "characteristics_ch1.5"] <- "sample"
data$sample <- gsub("disease state \\(dx\\): ", "", data$sample)
names(data)[names(data) == "characteristics_ch1.6"] <- "age"
data$age <- gsub("age: ", "", data$age)
data$age <- as.integer(as.numeric(data$age))
names(data)[names(data) == "characteristics_ch1.7"] <- "sex"
data$sex <- gsub("Sex: ", "", data$sex)
names(data)[names(data) == "characteristics_ch1.8"] <- "race"
data$race <- gsub("race: ", "", data$race)
names(data)[names(data) == "characteristics_ch1.9"] <- "negcontrol_pc1"
data$negcontrol_pc1 <- gsub("negcontrol_pc1: ", "", data$negcontrol_pc1)
names(data)[names(data) == "characteristics_ch1.10"] <- "negcontrol_pc2"
data$negcontrol_pc2 <- gsub("negcontrol_pc2: ", "", data$negcontrol_pc2)
names(data)[names(data) == "characteristics_ch1.11"] <- "neun_pos"
data$neun_pos <- gsub("neun_pos: ", "", data$neun_pos)
names(data)[names(data) == "characteristics_ch1.12"] <- "snppc1"
data$snppc1 <- gsub("snppc1: ", "", data$snppc1)
names(data)[names(data) == "characteristics_ch1.1"] <- "Array"
data$Array <- gsub("sentrix_position: ", "", data$Array)
data$sample_id <- gsub("ftp://ftp.ncbi.nlm.nih.gov/geo/samples/GSM3584nnn/.*/suppl/","", data$supplementary_file.1)
data$sample_id <- gsub("_Red.idat.gz","", data$sample_id)
names(data)[names(data) == "supplementary_file"] <- "Basename"
baseDir<- file.path("C:/Users/asta1/Desktop/stud/6sem/biomeds/2darbas","input","GSE125895","supplement", "GSE125895_idat","/")
data$Basename <- gsub("ftp://ftp.ncbi.nlm.nih.gov/geo/samples/GSM3584nnn/.*/suppl/", baseDir, data$Basename)
data$Basename <- gsub("_Red.idat.gz|_Grn.idat.gz", "", data$Basename)
#head(data$Basename)
data$sentrix_id <- sapply(strsplit(basename(data$supplementary_file.1), "_"), "[", 2)
beta <- readRDS("../../Komanda/output/betab.rds")
n <- colnames(beta)
data <- data[match(n, data$sample_id),]
head(data)
dim(beta)
write.csv(data, "../output/sampleKey.csv")
data <- read.csv("../../2darbas/input/GSE125895_samplekey.csv", as.is = TRUE)
#Remove unnecessary columns
data <- data[-c(3:5,7,24,26,28,29,32:34,36:46,49)]
names(data)[names(data) == "title"] <- "sample_name"
data$sample_name <- gsub("sample_plate:", "", data$sample_name)
names(data)[names(data) == "characteristics_ch1"] <- "sample_plate"
data$sample_plate <- gsub("sample_plate:", "", data$sample_plate)
names(data)[names(data) == "characteristics_ch1.2"] <- "brNum"
data$brNum <- gsub("brnum: ", "", data$brNum)
names(data)[names(data) == "characteristics_ch1.3"] <- "tissue"
data$tissue <- gsub("brnum: ", "", data$tissue)
names(data)[names(data) == "characteristics_ch1.4"] <- "tissue_region"
data$tissue_region <- gsub("tissue region: ", "", data$tissue_region)
names(data)[names(data) == "characteristics_ch1.5"] <- "sample"
data$sample <- gsub("disease state \\(dx\\): ", "", data$sample)
names(data)[names(data) == "characteristics_ch1.6"] <- "age"
data$age <- gsub("age: ", "", data$age)
data$age <- as.integer(as.numeric(data$age))
names(data)[names(data) == "characteristics_ch1.7"] <- "sex"
data$sex <- gsub("Sex: ", "", data$sex)
names(data)[names(data) == "characteristics_ch1.8"] <- "race"
data$race <- gsub("race: ", "", data$race)
names(data)[names(data) == "characteristics_ch1.9"] <- "negcontrol_pc1"
data$negcontrol_pc1 <- gsub("negcontrol_pc1: ", "", data$negcontrol_pc1)
names(data)[names(data) == "characteristics_ch1.10"] <- "negcontrol_pc2"
data$negcontrol_pc2 <- gsub("negcontrol_pc2: ", "", data$negcontrol_pc2)
names(data)[names(data) == "characteristics_ch1.11"] <- "neun_pos"
data$neun_pos <- gsub("neun_pos: ", "", data$neun_pos)
names(data)[names(data) == "characteristics_ch1.12"] <- "snppc1"
data$snppc1 <- gsub("snppc1: ", "", data$snppc1)
names(data)[names(data) == "characteristics_ch1.1"] <- "Array"
data$Array <- gsub("sentrix_position: ", "", data$Array)
data$sample_id <- gsub("ftp://ftp.ncbi.nlm.nih.gov/geo/samples/GSM3584nnn/.*/suppl/","", data$supplementary_file.1)
data$sample_id <- gsub("_Red.idat.gz","", data$sample_id)
names(data)[names(data) == "supplementary_file"] <- "Basename"
baseDir<- file.path("C:/Users/asta1/Desktop/stud/6sem/biomeds/2darbas","input","GSE125895","supplement", "GSE125895_idat","/")
data$Basename <- gsub("ftp://ftp.ncbi.nlm.nih.gov/geo/samples/GSM3584nnn/.*/suppl/", baseDir, data$Basename)
data$Basename <- gsub("_Red.idat.gz|_Grn.idat.gz", "", data$Basename)
#head(data$Basename)
data$sentrix_id <- sapply(strsplit(basename(data$supplementary_file.1), "_"), "[", 2)
beta <- readRDS("../../Komanda/output/betab.rds")
n <- colnames(beta)
data <- data[match(n, data$sample_id),]
head(data)
dim(beta)
write.csv(data, "../output/sampleKey.csv")
sample <- read.csv("../output/sampleKey.csv")
beta <- readRDS("../../Komanda/output/betab.rds")
anno <- readRDS("../../Komanda/output/annotation.rds")
library("S4Vectors")
sample
sample
case <- sample[sample$sample == "Alzheimer",]
case
unique(case$source_name_ch1)
unique(as.character(case$source_name_ch1))
case
unique(as.character(case$sample_plate))
case
unique(as.character(case$Array))
rm(list = ls())
knitr::opts_chunk$set(
message = FALSE,
error = TRUE,
echo = FALSE
)
#if(!require("treemap"))install.packages("treemap")
#if(!require("d3treeR"))install.packages("d3treeR")
#if(!require("hrbrthemes"))install.packages("hrbrthemes")
sample <- read.csv("../output/sampleKey.csv")
beta <- readRDS("../../Komanda/output/betab.rds")
anno <- readRDS("../../Komanda/output/annotation.rds")
library("S4Vectors")
sample
case <- sample[sample$sample == "Alzheimer",]
case
caseF <- case[case$sex == "F",]
caseF
unique(as.character(caseF$source_name_ch1))
caseM <- case[case$sex == "M",]
caseM
unique(as.character(caseM$source_name_ch1))
caseM
caseMnames <- caseM$sample_id
beta[1:5,1:5]
colnames(beta[1:5,1:5])
betaCase <- beta[, caseMnames]
head(betaCase)
#So if I Want to color each leaf of the Tree, I have to change the attribute of each leaf. This can be done using the dendrapply function. So I create a function that # # add 3 attributes to the leaf : one for the color (“lab.col”) ,one for the font “lab.font” and one for the size (“lab.cex”).
betaCase <- beta[, caseMnames]
head(betaCase)
#So if I Want to color each leaf of the Tree, I have to change the attribute of each leaf. This can be done using the dendrapply function. So I create a function that # # add 3 attributes to the leaf : one for the color (“lab.col”) ,one for the font “lab.font” and one for the size (“lab.cex”).
betaCase <- beta[, caseMnames]
#head(betaCase)
i=0
tdata <- t(betaCase)
tdata <- as.data.frame(tdata)
#dim(tdata)
tdata$loc <- sample$tissue_region
#So if I Want to color each leaf of the Tree, I have to change the attribute of each leaf. This can be done using the dendrapply function. So I create a function that # # add 3 attributes to the leaf : one for the color (“lab.col”) ,one for the font “lab.font” and one for the size (“lab.cex”).
betaCase <- beta[, caseMnames]
#head(betaCase)
i=0
tdata <- t(betaCase)
tdata <- as.data.frame(tdata)
#dim(tdata)
tdata$loc <- caseM$tissue_region
#tdata
last <- ncol(tdata)
colLab<<-function(n){
if(is.leaf(n)){
#I take the current attributes
a=attributes(n)
#I deduce the line in the original data, and so the treatment and the specie.
#print(as.character(rownames(tdata)));
#print(paste0("a : " , a$label, " ", i));
ligne <- match(attributes(n)$label,rownames(tdata))
#print(paste0("tdata : ", tdata[ligne,last]))
#print(paste0("ligne : ", ligne));
#print(as.character(tdata[ligne,last]))
control <- as.character(tdata[ligne,last]);
print(control)
#print(paste0("control : ", control));
if(control=="CRB"){col_con="blue"};
if(control=="DLPFC"){col_con="red"};
if(control=="ERC"){col_con="yellow"};
if(control=="HIPPO"){col_con="green"};
#Modification of leaf attribute
attr(n,"nodePar")<-c(a$nodePar,list(cex=1.5,lab.cex=1,pch=20,col=col_con,
lab.col = col_con,lab.font=1,lab.cex=1))
}
return(n)
}
hc <- hclust(dist(tdata))
dhc <- as.dendrogram(hc)
# Finally I just have to apply this to my dendrogram
dL <- dendrapply(dhc, colLab)
plot(dL , main="Chromosome 8 , Plate_1 and type I")
legend("top", title = "Sample status",
legend = c("CRB", "DLPFC", "ERC", "HIPPO"),
col = c("red", "blue", "yellow", "green"),
pch = c(20,20,20,20), bty = "n",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE, inset = c(0, 0.1))
#So if I Want to color each leaf of the Tree, I have to change the attribute of each leaf. This can be done using the dendrapply function. So I create a function that # # add 3 attributes to the leaf : one for the color (“lab.col”) ,one for the font “lab.font” and one for the size (“lab.cex”).
betaCase <- beta[, caseMnames]
#head(betaCase)
i=0
tdata <- t(betaCase)
tdata <- as.data.frame(tdata)
#dim(tdata)
tdata$loc <- caseM$tissue_region
#tdata
last <- ncol(tdata)
colLab<<-function(n){
if(is.leaf(n)){
#I take the current attributes
a=attributes(n)
#I deduce the line in the original data, and so the treatment and the specie.
#print(as.character(rownames(tdata)));
#print(paste0("a : " , a$label, " ", i));
ligne <- match(attributes(n)$label,rownames(tdata))
#print(paste0("tdata : ", tdata[ligne,last]))
#print(paste0("ligne : ", ligne));
#print(as.character(tdata[ligne,last]))
control <- as.character(tdata[ligne,last]);
print(control)
#print(paste0("control : ", control));
if(control=="CRB"){col_con="blue"};
if(control=="DLPFC"){col_con="red"};
if(control=="ERC"){col_con="yellow"};
if(control=="HIPPO"){col_con="green"};
#Modification of leaf attribute
attr(n,"nodePar")<-c(a$nodePar,list(cex=1.5,lab.cex=1,pch=20,col=col_con,
lab.col = col_con,lab.font=1,lab.cex=1))
}
return(n)
}
hc <- hclust(dist(tdata))
dhc <- as.dendrogram(hc)
# Finally I just have to apply this to my dendrogram
dL <- dendrapply(dhc, colLab)
plot(dL , main="All males that has Alzheimer", labels(caseM$geo_accession))
#So if I Want to color each leaf of the Tree, I have to change the attribute of each leaf. This can be done using the dendrapply function. So I create a function that # # add 3 attributes to the leaf : one for the color (“lab.col”) ,one for the font “lab.font” and one for the size (“lab.cex”).
betaCase <- beta[, caseMnames]
#head(betaCase)
i=0
tdata <- t(betaCase)
tdata <- as.data.frame(tdata)
#dim(tdata)
tdata$loc <- caseM$tissue_region
#tdata
last <- ncol(tdata)
colLab<<-function(n){
if(is.leaf(n)){
#I take the current attributes
a=attributes(n)
#I deduce the line in the original data, and so the treatment and the specie.
#print(as.character(rownames(tdata)));
#print(paste0("a : " , a$label, " ", i));
ligne <- match(attributes(n)$label,rownames(tdata))
#print(paste0("tdata : ", tdata[ligne,last]))
#print(paste0("ligne : ", ligne));
#print(as.character(tdata[ligne,last]))
control <- as.character(tdata[ligne,last]);
print(control)
#print(paste0("control : ", control));
if(control=="CRB"){col_con="blue"};
if(control=="DLPFC"){col_con="red"};
if(control=="ERC"){col_con="yellow"};
if(control=="HIPPO"){col_con="green"};
#Modification of leaf attribute
attr(n,"nodePar")<-c(a$nodePar,list(cex=1.5,lab.cex=1,pch=20,col=col_con,
lab.col = col_con,lab.font=1,lab.cex=1))
}
return(n)
}
hc <- hclust(dist(tdata))
dhc <- as.dendrogram(hc)
# Finally I just have to apply this to my dendrogram
dL <- dendrapply(dhc, colLab)
plot(dL , main="All males that has Alzheimer")
legend("top", title = "Region",
legend = c("CRB", "DLPFC", "ERC", "HIPPO"),
col = c("red", "blue", "yellow", "green"),
pch = c(20,20,20,20), bty = "n",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE, inset = c(0, 0.1))
plot(dL , main="All males that has Alzheimer", labels = FALSE)
#So if I Want to color each leaf of the Tree, I have to change the attribute of each leaf. This can be done using the dendrapply function. So I create a function that # # add 3 attributes to the leaf : one for the color (“lab.col”) ,one for the font “lab.font” and one for the size (“lab.cex”).
betaCase <- beta[, caseMnames]
#head(betaCase)
i=0
tdata <- t(betaCase)
tdata <- as.data.frame(tdata)
#dim(tdata)
tdata$loc <- caseM$tissue_region
#tdata
last <- ncol(tdata)
colLab<<-function(n){
if(is.leaf(n)){
#I take the current attributes
a=attributes(n)
#I deduce the line in the original data, and so the treatment and the specie.
#print(as.character(rownames(tdata)));
#print(paste0("a : " , a$label, " ", i));
ligne <- match(attributes(n)$label,rownames(tdata))
#print(paste0("tdata : ", tdata[ligne,last]))
#print(paste0("ligne : ", ligne));
#print(as.character(tdata[ligne,last]))
control <- as.character(tdata[ligne,last]);
print(control)
#print(paste0("control : ", control));
if(control=="CRB"){col_con="blue"};
if(control=="DLPFC"){col_con="red"};
if(control=="ERC"){col_con="yellow"};
if(control=="HIPPO"){col_con="green"};
#Modification of leaf attribute
attr(n,"nodePar")<-c(a$nodePar,list(cex=1.5,lab.cex=1,pch=20,col=col_con,
lab.col = col_con,lab.font=1,lab.cex=1))
}
return(n)
}
hc <- hclust(dist(tdata))
dhc <- as.dendrogram(hc)
# Finally I just have to apply this to my dendrogram
dL <- dendrapply(dhc, colLab)
plot(dL , main="All males that has Alzheimer", labels = FALSE)
legend("top", title = "Region",
legend = c("CRB", "DLPFC", "ERC", "HIPPO"),
col = c("red", "blue", "yellow", "green"),
pch = c(20,20,20,20), bty = "n",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE, inset = c(0, 0.1))
# Finally I just have to apply this to my dendrogram
dL <- dendrapply(dhc, colLab, labels = FA)
dL <- dendrapply(dhc, colLab, labels = FALSE)
dL <- dendrapply(dhc, colLab)
plot(dL , main="All males that has Alzheimer")
legend("top", title = "Region",
legend = c("CRB", "DLPFC", "ERC", "HIPPO"),
col = c("red", "blue", "yellow", "green"),
pch = c(20,20,20,20), bty = "n",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE, inset = c(0, 0.1))
#So if I Want to color each leaf of the Tree, I have to change the attribute of each leaf. This can be done using the dendrapply function. So I create a function that # # add 3 attributes to the leaf : one for the color (“lab.col”) ,one for the font “lab.font” and one for the size (“lab.cex”).
betaCase <- beta[, caseMnames]
#head(betaCase)
i=0
tdata <- t(betaCase)
tdata <- as.data.frame(tdata)
#dim(tdata)
tdata$loc <- caseM$tissue_region
#tdata
last <- ncol(tdata)
colLab<<-function(n){
if(is.leaf(n)){
#I take the current attributes
a=attributes(n)
#I deduce the line in the original data, and so the treatment and the specie.
#print(as.character(rownames(tdata)));
#print(paste0("a : " , a$label, " ", i));
ligne <- match(attributes(n)$label,rownames(tdata))
#print(paste0("tdata : ", tdata[ligne,last]))
#print(paste0("ligne : ", ligne));
#print(as.character(tdata[ligne,last]))
control <- as.character(tdata[ligne,last]);
#print(control)
#print(paste0("control : ", control));
if(control=="CRB"){col_con="blue"};
if(control=="DLPFC"){col_con="red"};
if(control=="ERC"){col_con="yellow"};
if(control=="HIPPO"){col_con="green"};
#Modification of leaf attribute
attr(n,"nodePar")<-c(a$nodePar,list(cex=1.5,lab.cex=1,pch=20,col=col_con,
lab.col = col_con,lab.font=1,lab.cex=1))
}
return(n)
}
hc <- hclust(dist(tdata))
dhc <- as.dendrogram(hc)
# Finally I just have to apply this to my dendrogram
dL <- dendrapply(dhc, colLab)
plot(dL , main="All males that has Alzheimer")
legend("top", title = "Region",
legend = c("CRB", "DLPFC", "ERC", "HIPPO"),
col = c("red", "blue", "yellow", "green"),
pch = c(20,20,20,20), bty = "n",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE, inset = c(0, 0.1))
par(mar=c(4,4,2,2))
dL <- dendrapply(dhc, colLab)
plot(dL , main="All males that has Alzheimer")
legend("top", title = "Region",
legend = c("CRB", "DLPFC", "ERC", "HIPPO"),
col = c("red", "blue", "yellow", "green"),
pch = c(20,20,20,20), bty = "n",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE, inset = c(0, 0.1))
par(mar=c(2,2,2,2))
dL <- dendrapply(dhc, colLab)
plot(dL , main="All males that has Alzheimer")
legend("top", title = "Region",
legend = c("CRB", "DLPFC", "ERC", "HIPPO"),
col = c("red", "blue", "yellow", "green"),
pch = c(20,20,20,20), bty = "n",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE, inset = c(0, 0.1))
par(mar=c(4,4,4,4))
dL <- dendrapply(dhc, colLab)
plot(dL , main="All males that has Alzheimer")
legend("top", title = "Region",
legend = c("CRB", "DLPFC", "ERC", "HIPPO"),
col = c("red", "blue", "yellow", "green"),
pch = c(20,20,20,20), bty = "n",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE, inset = c(0, 0.1))
par(mar=c(4,8,4,4))
dL <- dendrapply(dhc, colLab)
plot(dL , main="All males that has Alzheimer")
legend("top", title = "Region",
legend = c("CRB", "DLPFC", "ERC", "HIPPO"),
col = c("red", "blue", "yellow", "green"),
pch = c(20,20,20,20), bty = "n",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE, inset = c(0, 0.1))
par(mar=c(4,10,4,4))
dL <- dendrapply(dhc, colLab)
plot(dL , main="All males that has Alzheimer")
legend("top", title = "Region",
legend = c("CRB", "DLPFC", "ERC", "HIPPO"),
col = c("red", "blue", "yellow", "green"),
pch = c(20,20,20,20), bty = "n",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE, inset = c(0, 0.1))
par(mar=c(10,4,4,4))
dL <- dendrapply(dhc, colLab)
plot(dL , main="All males that has Alzheimer")
legend("top", title = "Region",
legend = c("CRB", "DLPFC", "ERC", "HIPPO"),
col = c("red", "blue", "yellow", "green"),
pch = c(20,20,20,20), bty = "n",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE, inset = c(0, 0.1))
par(mar=c(8,4,4,4))
dL <- dendrapply(dhc, colLab)
plot(dL , main="All males that has Alzheimer")
legend("top", title = "Region",
legend = c("CRB", "DLPFC", "ERC", "HIPPO"),
col = c("red", "blue", "yellow", "green"),
pch = c(20,20,20,20), bty = "n",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE, inset = c(0, 0.1))
par(mar=c(4,4,4,4))
dL <- dendrapply(dhc, colLab)
plot(dL , main="All males that has Alzheimer")
legend("top", title = "Region",
legend = c("CRB", "DLPFC", "ERC", "HIPPO"),
col = c("red", "blue", "yellow", "green"),
pch = c(20,20,20,20), bty = "n",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE, inset = c(0, 0.1))
par(mar=c(8,4,4,4))
dL <- dendrapply(dhc, colLab)
plot(dL , main="All males that has Alzheimer")
legend("topleft", title = "Region",
legend = c("CRB", "DLPFC", "ERC", "HIPPO"),
col = c("red", "blue", "yellow", "green"),
pch = c(20,20,20,20), bty = "n",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE, inset = c(0, 0.1))
par(mar=c(8,4,4,4))
dL <- dendrapply(dhc, colLab)
plot(dL , main="All males that has Alzheimer")
legend("topright", title = "Region",
legend = c("CRB", "DLPFC", "ERC", "HIPPO"),
col = c("red", "blue", "yellow", "green"),
pch = c(20,20,20,20), bty = "n",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE, inset = c(0, 0.1))
#So if I Want to color each leaf of the Tree, I have to change the attribute of each leaf. This can be done using the dendrapply function. So I create a function that # # add 3 attributes to the leaf : one for the color (“lab.col”) ,one for the font “lab.font” and one for the size (“lab.cex”).
betaCase <- beta[, caseMnames]
#head(betaCase)
i=0
tdata <- t(betaCase)
tdata <- as.data.frame(tdata)
#dim(tdata)
tdata$loc <- caseM$tissue_region
#tdata
last <- ncol(tdata)
colLab<<-function(n){
if(is.leaf(n)){
#I take the current attributes
a=attributes(n)
#I deduce the line in the original data, and so the treatment and the specie.
#print(as.character(rownames(tdata)));
#print(paste0("a : " , a$label, " ", i));
ligne <- match(attributes(n)$label,rownames(tdata))
#print(paste0("tdata : ", tdata[ligne,last]))
#print(paste0("ligne : ", ligne));
#print(as.character(tdata[ligne,last]))
control <- as.character(tdata[ligne,last]);
#print(control)
#print(paste0("control : ", control));
if(control=="CRB"){col_con="blue"};
if(control=="DLPFC"){col_con="red"};
if(control=="ERC"){col_con="yellow"};
if(control=="HIPPO"){col_con="green"};
print(a$nodePar)
#Modification of leaf attribute
attr(n,"nodePar")<-c(a$nodePar,list(cex=1.5,lab.cex=1,pch=20,col=col_con,
lab.col = col_con,lab.font=1,lab.cex=1))
}
return(n)
}
hc <- hclust(dist(tdata))
#So if I Want to color each leaf of the Tree, I have to change the attribute of each leaf. This can be done using the dendrapply function. So I create a function that # # add 3 attributes to the leaf : one for the color (“lab.col”) ,one for the font “lab.font” and one for the size (“lab.cex”).
betaCase <- beta[, caseMnames]
#head(betaCase)
i=0
tdata <- t(betaCase)
tdata <- as.data.frame(tdata)
#dim(tdata)
tdata$loc <- caseM$tissue_region
#tdata
last <- ncol(tdata)
colLab<<-function(n){
if(is.leaf(n)){
#I take the current attributes
a=attributes(n)
#I deduce the line in the original data, and so the treatment and the specie.
#print(as.character(rownames(tdata)));
#print(paste0("a : " , a$label, " ", i));
ligne <- match(attributes(n)$label,rownames(tdata))
#print(paste0("tdata : ", tdata[ligne,last]))
#print(paste0("ligne : ", ligne));
#print(as.character(tdata[ligne,last]))
control <- as.character(tdata[ligne,last]);
#print(control)
#print(paste0("control : ", control));
if(control=="CRB"){col_con="blue"};
if(control=="DLPFC"){col_con="red"};
if(control=="ERC"){col_con="yellow"};
if(control=="HIPPO"){col_con="green"};
#print(a$nodePar)
#Modification of leaf attribute
attr(n,"nodePar")<-c(a$nodePar,list(cex=1.5,lab.cex=1,pch=20,col=col_con,
lab.col = col_con,lab.font=1,lab.cex=1))
}
return(n)
}
hc <- hclust(dist(tdata))
